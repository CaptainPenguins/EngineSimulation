/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     buoyantBoussinesqSimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         10000;

deltaT          1;

writeControl    timeStep;

writeInterval   100;

purgeWrite      5;

writeFormat     ascii;

writePrecision  6;

writeCompression off;

timeFormat      general;

timePrecision   6;

runTimeModifiable true;

functions
{
    probes
    {
        type            probes;
        functionObjectLibs ("libsampling.so");
        enabled         true;
        outputControl   timeStep;
        outputInterval  1;

        fields
        (
            p
	    U
	    T
        );

        probeLocations
        (
            (-0.0625 0 0 )
	    ( -0.0454 0 0)
	    (0 0.0454 0)
            ( 0.0625 0 0 )
	    ( 0.0454 0 0)
	    (0 -0.0454 0)
        );

    }

	forces
	{
		type forces;
		functionObjectLibs ("libforces.so"); //Lib to load
		patches (heatedWall); // change to your patch name
		rhoName rhoInf;
		rhoInf 786.6; //Reference density for fluid
		CofR (0 0 0); //Origin for moment calculations
	}

	forceCoeffs
	{
		type forceCoeffs;
		functionObjectLibs ("libforces.so");
		patches (heatedWall);
		rhoName	rhoInf;
		rhoInf	786.6;
		CofR (0 0 0);
		liftDir (0 1 0);
		dragDir (1 0 0);
		pitchAxis (0 0 0);
		magUInf 196; 
		lRef 1;
		Aref 1;
		outputControl timeStep;
		outputInterval 1;
	}



}


// ************************************************************************* //
